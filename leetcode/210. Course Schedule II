class Solution:
    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:
        #topological sort + BFS = Kahn's Algorithm

        adj_list = [[] for _ in range(numCourses)]
        in_degrees = [0] * numCourses

        for dest,src in prerequisites:
            adj_list[src].append(dest)
            in_degrees[dest] +=1
        
        q = deque(i for i in range(numCourses) if in_degrees[i]==0)

        res = []
        count = 0
        while q:
            node = q.popleft()
            res.append(node)
            count += 1
            for neighbour in adj_list[node]:
                in_degrees[neighbour] -= 1
                if in_degrees[neighbour] == 0:
                    q.append(neighbour)

        if count == numCourses:
            return res
        else:
            return []
